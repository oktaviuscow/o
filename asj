local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()
local MarketplaceService = game:GetService("MarketplaceService")
local gamename = MarketplaceService:GetProductInfo(game.PlaceId).Name
local ApelHubFolder = "Apel Hub"


local Window = Library:CreateWindow({
    Title = "Apel Hub",
    SubTitle = tostring(gamename),
    TabWidth = 160,
    Size = UDim2.fromOffset(400, 320),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Resize = true, -- Resize this ^ Size according to a 1920x1080 screen, good for mobile users but may look weird on some devices
    MinSize = Vector2.new(100, 100),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})


local Tabs = {
    Credits = Window:CreateTab({Title = "Credits", Icon = "book"}),
    Farm = Window:CreateTab({ Title = "Farming", Icon = "align-center" }),
    Trials = Window:CreateTab({Title = "Trial", Icon = "apple"}),
    Eggs = Window:CreateTab({Title = "Eggs", Icon = "egg"}),
    Misc = Window:CreateTab({Title = " Misc", Icon = "diamond"}),
    Settings = Window:CreateTab({ Title = "Settings", Icon = "settings" })

}

Tabs.Credits:CreateParagraph("Aligned Paragraph", {
    Title = "Discord",
    Content = "https://discord.gg/4gDAbj2VXG\n Dev - Apelsinka",
    TitleAlignment = "Middle",
    ContentAlignment = Enum.TextXAlignment.Center
})

Tabs.Credits:CreateButton({
    Title = "Copy Discord link",
    Description = "Click it",
    TitleAlignment = "Middle",
    ContentAlignment = Enum.TextXAlignment.Center,
    Callback = function()
        local link = "https://discord.gg/4gDAbj2VXG"
        setclipboard(link)
    end
})


local Options = Library.Options
local player = game:GetService("Players").LocalPlayer
local character = player.Character
local hmr = character.HumanoidRootPart
local ReplicatedStorage = game:GetService("ReplicatedStorage")

    local bb=game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
    bb:CaptureController()bb:ClickButton2(Vector2.new())end)


local folderName = "Apel Hub"
local PositionfileName = "Saved Position.txt"
local WorldfileName = "Saved World.txt"    
local PositionfolderPath = folderName .. "\\" .. PositionfileName
local WorldfolderPath = folderName .. "\\" .. WorldfileName

-- Проверяем, существует ли папка
if not isfolder(folderName) then
    makefolder(folderName)  -- Создаем папку, если она не существует
    print("Папка '" .. folderName .. "' была создана.")
else
    print("Папка '" .. folderName .. "' уже существует.")
end

-- Проверяем, существует ли файл
if not isfile(PositionfolderPath) or not isfile(WorldfolderPath) then
    local positionforsave = "139.8529052734375, 377.14923095703125, 3295.7548828125"
    local worldforsave = "Piece Village"
    writefile(PositionfolderPath, tostring(positionforsave))  -- Записываем значение в файл
    writefile(WorldfolderPath, worldforsave)
    print("Файл '" .. PositionfileName.."and"..WorldfileName .. "' был создан и записан.")
else
    print("Файл '" .. PositionfileName.."and"..WorldfileName .. "' был создан и записан.")
end




do

    local AutoClick = Tabs.Misc:CreateToggle("Auto Click", {Title = "Auto Click", Default = false, Description = ""})

    AutoClick:OnChanged(function(State)-- Auto Click
        getgenv().AutoClicking = State
        while getgenv().AutoClicking == true do
            if not getgenv().AutoClicking == true then return end
                task.wait()
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Bridge"):FireServer("Enemies", "World", "Click")
        end
    end)


    local AutoCollect = Tabs.Misc:CreateToggle("Auto Collect", {Title = "Auto Collect Drops", Default = false, Description = ""})

    local dropfolder = game:GetService("Workspace").Client.Drops

    AutoCollect:OnChanged(function(State) -- Auto Collect Drops
        getgenv().AutoCollecting =  State
        while getgenv().AutoCollecting == true do
            if not getgenv().AutoCollecting == true then return end
                task.wait()
                for i, v in ipairs(dropfolder:GetChildren()) do
                    v.CFrame = hmr.CFrame
                end
        end
    end)

    local EnemiesFolder = workspace.Client.Enemies
    local ServerEnemiesFolder = workspace.Server.Enemies
    local Enemies = {}
    local nameSet = {}

    if EnemiesFolder then
        for _, enemy in ipairs(EnemiesFolder:GetChildren()) do
            local enemyname = enemy.Name
            if enemyname and not nameSet[enemyname] then
                table.insert(Enemies, enemyname)
                nameSet[enemyname] = true
            end
        end
    end
    
    local EnemyDropdown = Tabs.Farm:CreateDropdown("Enemy", {Title = "Enemy Selector", Description = "Select enemy for farm", Values = Enemies, Multi = true, Default = {}})

    local CurrentEnemy = {}
    EnemyDropdown:OnChanged(function(Value)
        for Value, State in next, Value do
            table.insert(CurrentEnemy, Value)
        end
    end)

    function EnemyDropdown:GetSelectedValues()
        local selected = {}
        for value, state in pairs(self.Value) do
            if state then
                table.insert(selected, value)
            end
        end
        return selected
    end

    local function RefreshEnemyDropdownWithNewEnemies()
        local newEnemies = {}
        local nameSet = {}
        if EnemiesFolder then
            for _, enemy in ipairs(EnemiesFolder:GetChildren()) do
                local enemyname = enemy.Name
                if enemyname and not nameSet[enemyname] then
                    table.insert(newEnemies, enemyname)
                    nameSet[enemyname] = true
                end
            end
        end
        EnemyDropdown:SetValues(newEnemies)
    end
    local AutoFarmSelectedMobs = Tabs.Farm:CreateToggle("AutoFarm", {Title = "Auto Farm Selected Mobs", Default = false, Description = ""})

    local AutoFarmWithTeleport = Tabs.Farm:CreateToggle("AutoFarm", {Title = "Auto Farm With Teleport", Default = false, Description = ""})

    AutoFarmWithTeleport:OnChanged(function(state)
        getgenv().AutoFarmWithTeleport = state
    end)

    Tabs.Farm:CreateButton({
        Title = "Refresh Enemies",
        Description = "Update Enemies Dropdown with your current enemies on map",
        Callback = function()
            RefreshEnemyDropdownWithNewEnemies()
        end
    })


    local function containsValue(value, table)
        for _, v in ipairs(table) do
            if v == value then
                return true
            end
        end
        return false
    end


    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    
    local teleportRadius = 10
    local teleportRadiusForPet = 20
    
    local function findNearestEnemy(selectedEnemies)
        local closestEnemy = nil
        local closestDistance = math.huge
    
        for _, enemy in pairs(ServerEnemiesFolder:GetDescendants()) do
            if enemy:IsA("Part") and tonumber(enemy:GetAttribute("Health")) > 0 then
                local distance = (rootPart.Position - enemy.Position).Magnitude
    
                if containsValue(enemy.Name, selectedEnemies) and distance < closestDistance then
                    closestDistance = distance
                    closestEnemy = enemy
                end
            end
        end
    
        return closestEnemy
    end

    local function findNearestEnemyWithoutContains()
        local closestEnemy = nil
        local closestDistance = math.huge
    
        for _, enemy in pairs(ServerEnemiesFolder:GetDescendants()) do
            if enemy:IsA("Part") and tonumber(enemy:GetAttribute("Health")) > 0 then
                local distance = (rootPart.Position - enemy.Position).Magnitude
    
                if distance < closestDistance then
                    closestDistance = distance
                    closestEnemy = enemy
                end
            end
        end
    
        return closestEnemy
    end
    


    local function getEquipedPets()
        local EquipedPets = {}
        for _, value in ipairs(workspace.Server.Pets:GetChildren()) do
            if value.Info:FindFirstChild("Player").Value == game:GetService("Players").LocalPlayer then
                table.insert(EquipedPets, value:GetAttribute("ID"))
            end
        end
        return EquipedPets
    end

    local function getPets()
        local pets = {}
        for _, value in ipairs(workspace.Server.Pets:GetChildren()) do
            if value.Info:FindFirstChild("Player").Value == game:GetService("Players").LocalPlayer then
                table.insert(pets, value)
            end
        end
        return pets
    end

    local function teleportToNearestEnemy()
        local selectedEnemies = {}
        for _, value in ipairs(EnemyDropdown:GetSelectedValues()) do
            table.insert(selectedEnemies, value)
        end
    
        local nearestEnemy = findNearestEnemy(selectedEnemies)

        if nearestEnemy then
            local targetRootPart = nearestEnemy
            local distanceToEnemy = (rootPart.Position - targetRootPart.Position).Magnitude
            if distanceToEnemy > teleportRadius then
                rootPart.CFrame = CFrame.new(targetRootPart.Position + Vector3.new(0, 0, 3), targetRootPart.Position) -- Телепортируемся за врага
            end


            local pets = getPets()
            for i, v in pets do
                    local petrootpart = v.HumanoidRootPart
                    local distanceToPet = (targetRootPart.Position - petrootpart.Position).Magnitude
            
                    if distanceToPet > teleportRadiusForPet then
                        petrootpart.CFrame = CFrame.new(targetRootPart.Position + Vector3.new(0, 0, 3), targetRootPart.Position) -- Телепортируем питомца за врага
                    end
            end
        end
    end

    local function teleportToNearestEnemyWithoutContains()

    
        local nearestEnemy = findNearestEnemyWithoutContains()

        if nearestEnemy then
            local targetRootPart = nearestEnemy
            local distanceToEnemy = (rootPart.Position - targetRootPart.Position).Magnitude
            if distanceToEnemy > teleportRadius then
                rootPart.CFrame = CFrame.new(targetRootPart.Position + Vector3.new(0, 0, 3), targetRootPart.Position) -- Телепортируемся за врага
            end


            local pets = getPets()
            for i, v in pets do
                    local petrootpart = v.HumanoidRootPart
                    local distanceToPet = (targetRootPart.Position - petrootpart.Position).Magnitude
            
                    if distanceToPet > teleportRadiusForPet then
                        petrootpart.CFrame = CFrame.new(targetRootPart.Position + Vector3.new(0, 0, 3), targetRootPart.Position) -- Телепортируем питомца за врага
                    end
            end
        end
    end

    local function sendPetsOnEnemy()
        local selectedEnemies = {}
        for _, value in ipairs(EnemyDropdown:GetSelectedValues()) do
            table.insert(selectedEnemies, value)
        end
        local nearestEnemy = findNearestEnemy(selectedEnemies)
        local EquipedPets = getEquipedPets()
        for i, v in EquipedPets do
            local rnpetcheck = tostring(game:GetService("Players").LocalPlayer).."---"..v
            if not nearestEnemy:FindFirstChild("Info"):FindFirstChild("Pets"):FindFirstChild(rnpetcheck) then
            local args = {
                [1] = "General",
                [2] = "Pets",
                [3] = "Attack",
                [4] = v,
                [5] = nearestEnemy
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Bridge"):FireServer(unpack(args))
        end
        end
    end

    local function sendPetsOnNearestEnemy()
        local nearestEnemy = findNearestEnemyWithoutContains()
        local EquipedPets = getEquipedPets()
        for i, v in EquipedPets do
            local rnpetcheck = tostring(game:GetService("Players").LocalPlayer).."---"..v
            if not nearestEnemy:FindFirstChild("Info"):FindFirstChild("Pets"):FindFirstChild(rnpetcheck) then
            local args = {
                [1] = "General",
                [2] = "Pets",
                [3] = "Attack",
                [4] = v,
                [5] = nearestEnemy
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Bridge"):FireServer(unpack(args))
        end
        end
    end
    getgenv().Busy = nil
    AutoFarmSelectedMobs:OnChanged(function(state)
        getgenv().AutoFarm = state
    
        while getgenv().AutoFarm do
            task.wait()
            local Values = {}
            for _, value in ipairs(EnemyDropdown:GetSelectedValues()) do
                table.insert(Values, value)
            end
            for i, v in ipairs(workspace.Client.Maps:GetChildren()) do
                if v.Name == "Lobby" then
                    getgenv().Busy = true
                else
                    getgenv().Busy = false
                end
            end
            -- Проверяем состояние врагов в каждом цикле
            for _, enemy in ipairs(ServerEnemiesFolder:GetDescendants()) do
                if enemy:IsA("Part") and containsValue(enemy.Name, Values) then
                    -- Проверяем здоровье и состояние врага
                    if tonumber(enemy:GetAttribute("Health")) > 0 and getgenv().AutoFarm == true and getgenv().Busy == false then
                        if getgenv().AutoFarmWithTeleport == true and getgenv().Busy == false then
                            teleportToNearestEnemy()
                        end
                        sendPetsOnEnemy()

                    end
                end
            end
        end
    end)
    
    local AutoFarmNearest = Tabs.Farm:CreateToggle("Auto Farm Nearest", {Title = "Auto Farm Nearest", Default = false, Description = ""})
    AutoFarmNearest:OnChanged(function(state)
        getgenv().AutoFarmNearest = state
        while getgenv().AutoFarmNearest do
            task.wait()
            for i, v in ipairs(workspace.Client.Maps:GetChildren()) do
                if v.Name == "Lobby" then
                    getgenv().Busy = true
                else
                    getgenv().Busy = false
                end
            end
            for _, enemy in ipairs(ServerEnemiesFolder:GetDescendants()) do
                if enemy:IsA("Part") then
                    -- Проверяем здоровье и состояние врага
                    if tonumber(enemy:GetAttribute("Health")) > 0 and getgenv().AutoFarmNearest == true and getgenv().Busy == false then
                        sendPetsOnNearestEnemy()
                        if getgenv().AutoFarmWithTeleport == true and getgenv().Busy == false then
                            teleportToNearestEnemyWithoutContains()
                        end
                        wait(0.1)

                    end
                end
            end
        end
        
    end)

    local eggfolder = workspace.Server.Eggs
    local egglist = {}
    local eggset = {}
    if eggfolder then
        for _, egg in ipairs(eggfolder:GetChildren()) do
            local eggname = egg.Name
            if eggname and not eggset[eggname] then
                table.insert(egglist, eggname)
                eggset[eggname] = true
            end
        end
    end

    local currenteggforfarm = nil
    local EggsDropDown = Tabs.Eggs:CreateDropdown("Eggs", {Title = "Select Egg For Auto Open", Description = "", Values = egglist, Multi = false, Default = 1,})
    EggsDropDown:OnChanged(function(Value)
        currenteggforfarm = Value
        print(currenteggforfarm)
    end)

    local AutoOpenEggs = Tabs.Eggs:CreateToggle("Auto Open Eggs", {Title = "Auto Open Selected Egg", Default = false, Description = ""})

    AutoOpenEggs:OnChanged(function(state)
        getgenv().AutoOpenEggs = state
        while getgenv().AutoOpenEggs do
            task.wait()

            local args = {
                [1] = "General",
                [2] = "Eggs",
                [3] = "Multi",
                [4] = currenteggforfarm,
                [5] = "Yen"
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Bridge"):FireServer(unpack(args))
            
        end
    end)
    local savedWolrdString = readfile(WorldfolderPath)
    getgenv().SavedWorld = tostring(savedWolrdString)
        -- Чтение сохраненной позиции из файла
    local savedPositionString = readfile(PositionfolderPath)
    local positionValues = {}

    -- Разделяем строку на отдельные координаты
    for value in string.gmatch(savedPositionString, "[^,]+") do
        table.insert(positionValues, tonumber(value))
    end

    -- Проверяем, что у нас есть три координаты
    if #positionValues == 3 then
        -- Создаем CFrame из координат
        getgenv().SavedPosition = CFrame.new(positionValues[1], positionValues[2], positionValues[3])
        print("Сохраненная позиция установлена:", getgenv().SavedPosition)
    else
        warn("Ошибка: неверное количество координат в файле.")
    end

    local currentPositionParagraph = Tabs.Trials:CreateParagraph("Current pos paragraph", {
        Title = "Current Position",
        Content = "World: "..savedWolrdString.."\nPosition: "..savedPositionString
    })
    
    local function updatePositionAndMap()
        -- Получаем текущее сохраненное состояние мира
        for _, v in ipairs(workspace.Client.Maps:GetChildren()) do
            getgenv().SavedWorld = v.Name
            writefile(WorldfolderPath, v.Name)
        end
    
        -- Получаем новую позицию
        getgenv().SavedPosition = CFrame.new(character.HumanoidRootPart.Position)
        writefile(PositionfolderPath, tostring(getgenv().SavedPosition.x)..","..tostring(getgenv().SavedPosition.y)..","..tostring(getgenv().SavedPosition.z))
        -- Обновляем содержимое параграфа
        currentPositionParagraph:SetValue("World: " .. tostring(getgenv().SavedWorld) .. "\nPosition: " .. tostring(getgenv().SavedPosition))
    end
    
    Tabs.Trials:CreateButton({
        Title = "Save New Position",
        Description = "Change your position for auto teleport",
        Callback = function()
            -- Вызываем функцию обновления позиции и карты
            updatePositionAndMap()
        end
    })
    
    local function teleportToSavedPosition()
        if getgenv().SavedPosition and getgenv().SavedWorld then
            local args = {
                [1] = "General",
                [2] = "Maps",
                [3] = "Teleport",
                [4] = getgenv().SavedWorld
            }
    
            -- Отправляем запрос на телепортацию
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Bridge"):FireServer(unpack(args))
            wait(2)
    
            -- Телепортируем персонажа на сохраненную позицию
            character.HumanoidRootPart.CFrame = getgenv().SavedPosition
        else
            warn("Saved world or position is not set.")
        end
    end

    Tabs.Trials:CreateButton({
        Title = "Teleport To Saved Position",
        Description = "",
        Callback = function()
            -- Вызываем функцию обновления позиции и карты
            teleportToSavedPosition()
        end
    })
    

    getgenv().TrialWaveLimit = 0
    local TrialWaveLimit = Tabs.Trials:CreateInput("TrialWaveLimit", {
        Title = "Trial Wave Limit",
        Default = 0, 
        Description = "On this wave script will auto leave",
        Numeric = true,
        Finished = false,
        Callback = function(Value)
            getgenv().TrialWaveLimit = tonumber(Value)
        end
    })
    TrialWaveLimit:OnChanged(function(Value)
        getgenv().TrialWaveLimit = tonumber(Value)
    end)
    
    local AutoTrial = Tabs.Trials:CreateToggle("Auto Trial",{
        Title = "Auto Trial",
        Default = false,
        Description = ""
    })

    local TrialEnemiesFolder = workspace.Server.Trial.Enemies

    local function findNearestEnemyInTrial()
        local closestEnemy = nil
        local closestDistance = math.huge
    
        for _, enemy in pairs(TrialEnemiesFolder:GetDescendants()) do
            if enemy:IsA("Part") and tonumber(enemy:GetAttribute("Health")) > 0 then
                local distance = (rootPart.Position - enemy.Position).Magnitude
    
                if distance < closestDistance then
                    closestDistance = distance
                    closestEnemy = enemy
                end
            end
        end
    
        return closestEnemy
    end

    local function teleportToNearestEnemyInTrial()

    
        local nearestEnemy = findNearestEnemyInTrial()

        if nearestEnemy then
            local targetRootPart = nearestEnemy
            local distanceToEnemy = (rootPart.Position - targetRootPart.Position).Magnitude
            if distanceToEnemy > teleportRadius then
                rootPart.CFrame = CFrame.new(targetRootPart.Position + Vector3.new(0, 0, 3), targetRootPart.Position) -- Телепортируемся за врага
            end


            local pets = getPets()
            for i, v in pets do
                    local petrootpart = v.HumanoidRootPart
                    local distanceToPet = (targetRootPart.Position - petrootpart.Position).Magnitude
            
                    if distanceToPet > teleportRadiusForPet then
                        petrootpart.CFrame = CFrame.new(targetRootPart.Position + Vector3.new(0, 0, 3), targetRootPart.Position) -- Телепортируем питомца за врага
                    end
            end
        end
    end

    local function sendPetsOnNearestEnemyInTrial()
        local nearestEnemy = findNearestEnemyInTrial()
        local EquipedPets = getEquipedPets()
        for i, v in EquipedPets do
            local rnpetcheck = tostring(game:GetService("Players").LocalPlayer).."---"..v
            if not nearestEnemy:FindFirstChild("Info"):FindFirstChild("Pets"):FindFirstChild(rnpetcheck) then
            local args = {
                [1] = "General",
                [2] = "Pets",
                [3] = "Attack",
                [4] = v,
                [5] = nearestEnemy
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Bridge"):FireServer(unpack(args))
        end
        end
    end

    local waveText = game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Trial.Frame.Frame.Content.Frame.Wave.Wave.Text
    getgenv().StopFarmingTrial = false
    AutoTrial:OnChanged(function(state)
        getgenv().AutoTrial = state
    
            local function checkTime()
                while getgenv().AutoTrial == true do
                    local currentTime = os.date("*t")  -- Получаем текущее время
                    local minutes = currentTime.min
                    local seconds = currentTime.sec
                    -- Проверяем, если минуты равны 0 или 30
                    if (minutes == 0) and (seconds > 10) then
                        getgenv().StopFarmingTrial = false
                        wait(1)
                        local mapsf = workspace.Client.Maps
                        for i ,v in ipairs(mapsf:GetChildren()) do
                            if v.Name ~= "Lobby" then
                                wait(1)
                                local args = {
                                    [1] = "General",
                                    [2] = "Maps",
                                    [3] = "Teleport",
                                    [4] = "Lobby"
                                }
                        
                                -- Отправляем запрос на телепортацию
                                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Bridge"):FireServer(unpack(args))
        
                            end
                        end
                        wait(2)
                        local args = {
                            [1] = "Enemies",
                            [2] = "Trial_Easy",
                            [3] = "Join"
                        }
                        
                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Bridge"):FireServer(unpack(args))
                        

                    end
        
                    -- Ждем 1 секунду перед следующей проверкой
                    wait(1)
                end
            end

            coroutine.wrap(checkTime)()
            
            local function checkcurrentwave()
                while getgenv().AutoTrial do
                    task.wait(1)
                    local waveNumber = tonumber(string.match(waveText, "%d+"))
                    local trialWaveLimit = tonumber(getgenv().TrialWaveLimit)
                    if waveNumber and trialWaveLimit and waveNumber >= trialWaveLimit and getgenv().StopFarmingTrial == false then
                        print("Достигнут лимит волн, телепортируем...")
                        waveText = "WAVE 0"
                        getgenv().StopFarmingTrial = true
                        wait(1)
                        teleportToSavedPosition()
                    end
                end
            end

            coroutine.wrap(checkcurrentwave)()
            while getgenv().AutoTrial do
                task.wait()
                for _, enemy in ipairs(TrialEnemiesFolder:GetDescendants()) do
                    if enemy:IsA("Part") then
                        -- Проверяем здоровье и состояние врага
                        if tonumber(enemy:GetAttribute("Health")) > 0 and getgenv().AutoTrial == true and getgenv().StopFarmingTrial == false then
                            teleportToNearestEnemyInTrial()
                            sendPetsOnNearestEnemyInTrial()
                            wait()
                        end
                    end
                end

            end


    end)


    local DeleteNotifications = Tabs.Misc:CreateButton({
        Title = "Enable/Disable Notifications",
        Description = "",
        Callback = function()
            local notifications = game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Notifications
            notifications.Visible  = not notifications.Visible
            
        end
    })
    wait(5)
    teleportToSavedPosition()
end


SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("Apel Hub")
SaveManager:SetFolder("Apel Hub/"..tostring(gamename))
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
SaveManager:LoadAutoloadConfig()

local Menu = game:GetService("CoreGui"):FindFirstChild("Menu")
if Menu then
    print("Найдено меню")
else
    local Menu = Instance.new("ScreenGui")
Menu.Name = "Menu"
local Frame = Instance.new("Frame")
Frame.Name = "Menu Button"
local ImageButton = Instance.new("ImageButton")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")

--Properties:
local coreGui = game:GetService("CoreGui")
Menu.Parent = coreGui
Menu.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = Menu
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.167999998, 0, 0.230493277, 0)
Frame.Size = UDim2.new(0.040533334, 0, 0.0681614354, 0)

ImageButton.Parent = Frame
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageButton.BorderSizePixel = 0
ImageButton.Size = UDim2.new(1, 0, 1, 0)
ImageButton.Image = "http://www.roblox.com/asset/?id=181239831"
ImageButton.MouseButton1Up:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true,"LeftControl",false,game)
end)

UIAspectRatioConstraint.Parent = ImageButton

UIAspectRatioConstraint_2.Parent = Frame
end

